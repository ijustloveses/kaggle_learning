$ python2.7
>>> import pandas
>>> titanic = pandas.read_csv('train.csv')
>>> print(titanic.head(5))
   PassengerId  Survived  Pclass  \
0            1         0       3
1            2         1       1
2            3         1       3
3            4         1       1
4            5         0       3

                                                Name     Sex  Age  SibSp  \
0                            Braund, Mr. Owen Harris    male   22      1
1  Cumings, Mrs. John Bradley (Florence Briggs Th...  female   38      1
2                             Heikkinen, Miss. Laina  female   26      0
3       Futrelle, Mrs. Jacques Heath (Lily May Peel)  female   35      1
4                           Allen, Mr. William Henry    male   35      0

   Parch            Ticket     Fare Cabin Embarked
0      0         A/5 21171   7.2500   NaN        S
1      0          PC 17599  71.2833   C85        C
2      0  STON/O2. 3101282   7.9250   NaN        S
3      0            113803  53.1000  C123        S
4      0            373450   8.0500   NaN        S


>>> print(titanic.describe())
       PassengerId    Survived      Pclass         Age       SibSp  \
count   891.000000  891.000000  891.000000  714.000000  891.000000
mean    446.000000    0.383838    2.308642   29.699118    0.523008
std     257.353842    0.486592    0.836071   14.526497    1.102743
min       1.000000    0.000000    1.000000    0.420000    0.000000
25%     223.500000    0.000000    2.000000   20.125000    0.000000
50%     446.000000    0.000000    3.000000   28.000000    0.000000
75%     668.500000    1.000000    3.000000   38.000000    1.000000
max     891.000000    1.000000    3.000000   80.000000    8.000000

            Parch        Fare
count  891.000000  891.000000
mean     0.381594   32.204208
std      0.806057   49.693429
min      0.000000    0.000000
25%      0.000000    7.910400
50%      0.000000   14.454200
75%      0.000000   31.000000
max      6.000000  512.329200


>>> titanic['Age']
0      22
1      38
2      26
3      35
4      35
5     NaN
       ..
886    27
887    19
888   NaN
889    26
890    32
Name: Age, dtype: float64
>>> titanic['Age'].fillna(titanic['Age'].median())
0      22
1      38
2      26
3      35
4      35
       ..
886    27
887    19
888    28
889    26
890    32
Name: Age, dtype: float64
>>> titanic["Age"] = titanic["Age"].fillna(titanic["Age"].median())
>>>


>>> titanic.loc[titanic["Sex"] == "male", "Sex"]
0      male
4      male
5      male
6      male
7      male
       ...
883    male
884    male
886    male
889    male
890    male
Name: Sex, dtype: object
>>> titanic.loc[titanic["Sex"] == "male", "Sex"] = 0
>>> titanic.loc[titanic["Sex"] == "male", "Sex"]
Series([], Name: Sex, dtype: object)
>>> titanic.loc[titanic["Sex"] == 0, "Sex"]
0      0
4      0
5      0
6      0
7      0
      ..
883    0
884    0
886    0
889    0
890    0
Name: Sex, dtype: object
>>> titanic.loc[titanic["Sex"] == "female", "Sex"] = 1


>>> titanic["Embarked"].unique()
array(['S', 'C', 'Q', nan], dtype=object)
>>> titanic['Embarked'] = titanic['Embarked'].fillna('S')
>>> titanic.loc[titanic['Embarked'] == 'S', 'Embarked'] = 0
>>> titanic.loc[titanic['Embarked'] == 'C', 'Embarked'] = 1
>>> titanic.loc[titanic['Embarked'] == 'Q', 'Embarked'] = 2


>>> from sklearn.linear_model import LinearRegression
>>> from sklearn.cross_validation import KFold
>>> predictors = ['Pclass', 'Sex', 'Age', 'SibSp', 'Parch', "Fare", 'Embarked']
>>> alg = LinearRegression()
>>> kf = KFold(titanic.shape[0], n_folds=3, random_state=1)
>>> predictions = []
>>> for train, test in kf:
...     train_predictors = (titanic[predictors].iloc[train, :])
...     train_target = titanic['Survived'].iloc[train]
...     alg.fit(train_predictors, train_target)
...     test_predictions = alg.predict(titanic[predictors].iloc[test, :])
...     predictions.append(test_predictions)
...
LinearRegression(copy_X=True, fit_intercept=True, n_jobs=1, normalize=False)
LinearRegression(copy_X=True, fit_intercept=True, n_jobs=1, normalize=False)
LinearRegression(copy_X=True, fit_intercept=True, n_jobs=1, normalize=False)


>>> import numpy as np
>>> predictions = np.concatenate(predictions, axis=0)
>>> predictions[predictions > .5] = 1
>>> predictions[predictions <= .5] = 0
>>> predictions
array([ 0.,  1.,  1.,  1.,  0.,  0.,  0.,  0.,  1.,  1.,  1.,  1.,  0.,
        0.,  1.,  1.,  0.,  0.,  1.,  1.,  0.,  0.,  1.,  1.,  1.,  0.,
        ......
        1.,  0.,  0.,  0.,  1.,  0.,  0.,  1.,  1.,  0.,  0.,  0.,  0.,
        1.,  0.,  0.,  1.,  1.,  0.,  0.,  0.,  1.,  1.,  0.,  1.,  0.,
        0.,  1.,  0.,  1.,  1.,  0.,  0.])
>>> predictions == titanic['Survived']
0       True
1       True
2       True
3       True
4       True
       ...
886     True
887     True
888    False
889    False
890     True
Name: Survived, dtype: bool
>>> predictions[predictions == titanic['Survived']]
__main__:1: FutureWarning: in the future, boolean array-likes will be handled as a boolean array index
array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,
        1.,  0.,  1.,  1.,  0.,  0.,  1.,  1.,  0.,  1.,  1.,  0.,  0.,
        ......
        1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  0.,  1.,
        1.,  0.,  1.,  1.,  0.,  0.,  1.])
>>> (predictions == titanic['Survived']).__class__
<class 'pandas.core.series.Series'>
>>> accuracy = sum(predictions[predictions == titanic["Survived"]]) / len(predictions)
>>> accuracy
0.78338945005611671
>>>
>>>
>>>
>>> from sklearn import cross_validation
>>> from sklearn.linear_model import LogisticRegression
>>> alg = LogisticRegression(random_state=1)
>>> scores = cross_validation.cross_val_score(alg, titanic[predictors], titanic['Survived'], cv=3)
>>> print(scores.mean())
0.787878787879
>>>
>>>
>>> titanic_test = pandas.read_csv("test.csv")
>>> titanic_test["Age"] = titanic_test["Age"].fillna(titanic["Age"].median())
>>> titanic_test["Fare"] = titanic_test["Fare"].fillna(titanic_test["Fare"].median())
>>> titanic_test.loc[titanic_test["Sex"] == "male", "Sex"] = 0
>>> titanic_test.loc[titanic_test["Sex"] == "female", "Sex"] = 1
>>> titanic_test["Embarked"] = titanic_test["Embarked"].fillna("S")
>>> titanic_test.loc[titanic_test["Embarked"] == "S", "Embarked"] = 0
>>> titanic_test.loc[titanic_test["Embarked"] == "C", "Embarked"] = 1
>>> titanic_test.loc[titanic_test["Embarked"] == "Q", "Embarked"] = 2
>>>

>>> alg = LogisticRegression(random_state=1)
>>> alg.fit(titanic[predictors], titanic['Survived'])
LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
          intercept_scaling=1, max_iter=100, multi_class='ovr',
          penalty='l2', random_state=1, solver='liblinear', tol=0.0001,
          verbose=0)
>>> predictions = alg.predict(titanic_test[predictors])
>>> submission = pandas.DataFrame({'PassengerId': titanic_test['PassengerId'], 'Survived':predictions})
>>> submission.to_csv('kaggle.titanic.csv', index=False)


